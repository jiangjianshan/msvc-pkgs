diff --color -urN libsigsegv-2.14-orig/src/handler-win32.c libsigsegv-2.14/src/handler-win32.c
--- libsigsegv-2.14-orig/src/handler-win32.c	2021-05-17 02:29:27.000000000 +0800
+++ libsigsegv-2.14/src/handler-win32.c	2024-03-25 10:07:13.426191206 +0800
@@ -214,9 +214,15 @@
               new_safe_esp -= 8; /* make room for arguments */
               new_safe_esp &= -16; /* align */
               new_safe_esp -= 4; /* make room for (unused) return address slot */
-              ExceptionInfo->ContextRecord->Esp = new_safe_esp;
-              /* Call stack_overflow_handler(faulting_page_address,safe_context).  */
-              ExceptionInfo->ContextRecord->Eip = (uintptr_t)&stack_overflow_handler;
+              #if defined(_MSC_VER) || defined(__MINGW32__)
+                ExceptionInfo->ContextRecord->Rsp = new_safe_esp;
+                /* Call stack_overflow_handler(faulting_page_address,safe_context).  */
+                ExceptionInfo->ContextRecord->Rip = (uintptr_t)&stack_overflow_handler;
+              #else
+                ExceptionInfo->ContextRecord->Esp = new_safe_esp;
+                /* Call stack_overflow_handler(faulting_page_address,safe_context).  */
+                ExceptionInfo->ContextRecord->Eip = (uintptr_t)&stack_overflow_handler;
+              #endif
               *(uintptr_t *)(new_safe_esp + 4) = faulting_page_address;
               *(uintptr_t *)(new_safe_esp + 8) = (uintptr_t) safe_context;
               return EXCEPTION_CONTINUE_EXECUTION;
