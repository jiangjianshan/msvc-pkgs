Binary files gklib-5.1.1-orig/.ms_stdint.h.swp and gklib-5.1.1/.ms_stdint.h.swp differ
diff --color -urN gklib-5.1.1-orig/gk_arch.h gklib-5.1.1/gk_arch.h
--- gklib-5.1.1-orig/gk_arch.h	2020-09-14 03:54:26.000000000 +0800
+++ gklib-5.1.1/gk_arch.h	2024-07-08 10:58:56.640616800 +0800
@@ -60,9 +60,10 @@
 #define PTRDIFF_MAX  INT64_MAX
 #endif
 
-/* MSC does not have INFINITY defined */
+#ifndef _MSC_VER
 #ifndef INFINITY
 #define INFINITY FLT_MAX
 #endif
+#endif
 
 #endif
diff --color -urN gklib-5.1.1-orig/ms_stdint.h gklib-5.1.1/ms_stdint.h
--- gklib-5.1.1-orig/ms_stdint.h	2024-07-08 10:55:42.143907700 +0800
+++ gklib-5.1.1/ms_stdint.h	2024-07-08 11:04:49.483792500 +0800
@@ -108,6 +108,7 @@
 #if !defined(__cplusplus) || defined(__STDC_LIMIT_MACROS) // [   See footnote 220 at page 257 and footnote 221 at page 259
 
 // 7.18.2.1 Limits of exact-width integer types
+#ifndef _MSC_VER
 #define INT8_MIN     ((int8_t)_I8_MIN)
 #define INT8_MAX     _I8_MAX
 #define INT16_MIN    ((int16_t)_I16_MIN)
@@ -120,6 +121,7 @@
 #define UINT16_MAX   _UI16_MAX
 #define UINT32_MAX   _UI32_MAX
 #define UINT64_MAX   _UI64_MAX
+#endif
 
 // 7.18.2.2 Limits of minimum-width integer types
 #define INT_LEAST8_MIN    INT8_MIN
@@ -138,14 +140,18 @@
 // 7.18.2.3 Limits of fastest minimum-width integer types
 #define INT_FAST8_MIN    INT8_MIN
 #define INT_FAST8_MAX    INT8_MAX
+#ifndef _MSC_VER
 #define INT_FAST16_MIN   INT16_MIN
 #define INT_FAST16_MAX   INT16_MAX
+#endif
 #define INT_FAST32_MIN   INT32_MIN
 #define INT_FAST32_MAX   INT32_MAX
 #define INT_FAST64_MIN   INT64_MIN
 #define INT_FAST64_MAX   INT64_MAX
 #define UINT_FAST8_MAX   UINT8_MAX
+#ifndef _MSC_VER
 #define UINT_FAST16_MAX  UINT16_MAX
+#endif
 #define UINT_FAST32_MAX  UINT32_MAX
 #define UINT_FAST64_MAX  UINT64_MAX
 
@@ -167,6 +173,7 @@
 
 // 7.18.3 Limits of other integer types
 
+#ifndef _MSC_VER
 #ifdef _WIN64 // [
 #  define PTRDIFF_MIN  _I64_MIN
 #  define PTRDIFF_MAX  _I64_MAX
@@ -177,6 +184,7 @@
 
 #define SIG_ATOMIC_MIN  INT_MIN
 #define SIG_ATOMIC_MAX  INT_MAX
+#endif
 
 #ifndef SIZE_MAX // [
 #  ifdef _WIN64 // [
@@ -194,8 +202,10 @@
 #  define WCHAR_MAX  _UI16_MAX
 #endif  // WCHAR_MAX ]
 
+#ifndef _MSC_VER
 #define WINT_MIN  0
 #define WINT_MAX  _UI16_MAX
+#endif
 
 #endif // __STDC_LIMIT_MACROS ]
 
@@ -206,6 +216,7 @@
 
 // 7.18.4.1 Macros for minimum-width integer constants
 
+#ifndef _MSC_VER
 #define INT8_C(val)  val##i8
 #define INT16_C(val) val##i16
 #define INT32_C(val) val##i32
@@ -219,6 +230,7 @@
 // 7.18.4.2 Macros for greatest-width integer constants
 #define INTMAX_C   INT64_C
 #define UINTMAX_C  UINT64_C
+#endif
 
 #endif // __STDC_CONSTANT_MACROS ]
 
